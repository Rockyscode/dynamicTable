// import { useParams } from "react-router-dom";

// const SingleProduct = () => {
//     const {id} = useParams();
//     const savedData = localStorage.getItem("savedData");
//     if (savedData) {
//       const parsedData = JSON.parse(savedData);
//     }
//     const { image, title, description, company } =
//     parsedData;
// return (
//     <section>
//       <div className="text-md breadcrumbs">
//         <ul>
//           <li>
//             <Link to="/">Home</Link>
//           </li>
//         </ul>
//       </div>
//       {/* products */}
//       <div className="mt-6 grid gap-y-8 md:grid-cols-2 md:gap-x-16">
//         {/* image */}
//         <img
//           src={image}
//           alt={title}
//           className="w-96 h-96 object-cover rounded-lg md:w-full"
//         />
//         {/* Products */}
//         <div>
//           <h1 className="capitalize text-3xl font-bold">{title}</h1>
//           <h4 className="text-xl text-neutral-content font-bold">{company}</h4>
//           <p className="mt-3 text-xl">{priceAmount}</p>
//           <p className="mt-6 leading-8">{description}</p>
//         </div>
//       </div>
//     </section>
//   );
// };

// export default SingleProduct;

// import React, { useRef, useEffect } from 'react';

// const SearchBar = ({ searchInput, setSearchInput, inputRef }) => {
//     return (
//       <div className="search-bar ">
//         <div className="form-control cursor-pointer ">
//           <label className="label">
//             <span className="label-text">Search for any product</span>
//           </label>
//           <label className="input-group ">
//             <span>Products</span>
//             <input
//               type="text"
//               placeholder="Search..."
//               className="input input-bordered"
//               value={searchInput}
//               onChange={(e) => setSearchInput(e.target.value)}
//               ref={inputRef}
//             />
//           </label>
//         </div>
//         {/* rest of your code */}
//       </div>
//     );
//   };

//   const Search = ({ data }) => {
//     const [searchInput, setSearchInput] = useState("");
//     const inputRef = useRef();

//     useEffect(() => {
//       inputRef.current.focus();
//     }, []);

//     // rest of your code

//     return <SearchBar searchInput={searchInput} setSearchInput={setSearchInput} inputRef={inputRef} />;
//   };

//   import useDebounce from './useDebounce'; // adjust the path according to your project structure

// const Search = ({ data }) => {
//   const [searchInput, setSearchInput] = useState("");
//   const [filteredData, setFilteredData] = useState([]);

//   const debouncedSearchTerm = useDebounce(searchInput, 500);

//   useEffect(
//     () => {
//       if (debouncedSearchTerm) {
//         setFilteredData(filterData(debouncedSearchTerm));
//       } else {
//         setFilteredData([]);
//       }
//     },
//     [debouncedSearchTerm] // Only call effect if debounced search term changes
//   );

//   // ...
// };

// <div class="relative">
//   <input type="text" class="w-full h-12 bg-blue-400" id="search-input" placeholder="Search for the product of interest" />
//   <div class="absolute top-0 w-full bg-white bg-opacity-50 shadow-lg overflow-y-auto max-h-96 transition-all duration-300 ease-in-out hidden" id="overlay-list">
//     <!-- List items go here -->
//   </div>
//   <table class="w-full mt-12">
//     <!-- Table content goes here -->
//   </table>
// </div>

import React, { useState, useEffect, useRef } from "react";
import { Link } from "react-router-dom";
import { v4 as uuidv4 } from "uuid";

import useDebounce from "../customHooks/useDebounce";

const SearchBar = ({ searchInput, setSearchInput, filteredData }) => {
  return (
    <div className="search-bar ">
      <div className="form-control cursor-pointer ">
        <label className="label">
          <span className="label-text">Search for any product</span>
        </label>
        <label className="input-group ">
          <span>Products</span>
          <input
            type="text"
            placeholder="Search..."
            className="input input-bordered"
            value={searchInput}
            onChange={(e) => setSearchInput(e.target.value)}
          />
        </label>
      </div>
      {searchInput && filteredData.length > 0 && (
        <ul className="search-results transition-all duration-500 absolute z-10 bg-slate-400 text-black px-8 py-4 rounded bg-opacity-80 w-full backdrop-blur-sm">
          {filteredData.map((item) => (
            <>
              <li key={item.id}>
                <p>
                  <Link to={`/${item.id}`} key={uuidv4()}>
                    {item.title} - {`${item.description.substring(0, 12)}...`}
                  </Link>
                </p>
              </li>
              <hr className="mb-2 text-slate-800 bg-slate-800" />
            </>
          ))}
        </ul>
      )}
    </div>
  );
};

const Search = ({ data }) => {
  // State variables for search input and filtered data
  const [searchInput, setSearchInput] = useState("");
  const [filteredData, setFilteredData] = useState([]);

  const debouncedSearchTerm = useDebounce(searchInput, 500);

  useEffect(
    () => {
      if (debouncedSearchTerm) {
        setFilteredData(filterData(debouncedSearchTerm));
      } else {
        setFilteredData([]);
      }
    },
    [debouncedSearchTerm] // Only call effect if debounced search term changes
  );

  const filterData = (input) => {
    if (!input) {
      return [];
    }

    input = input.toLowerCase();

    return data.filter(
      (item) =>
        item.title.toLowerCase().includes(input) ||
        item.description.toLowerCase().includes(input)
    );
  };

  // useEffect(() => {
  //   setFilteredData(filterData(searchInput));
  // }, [searchInput]);

  return (
    <SearchBar
      searchInput={searchInput}
      setSearchInput={setSearchInput}
      filteredData={filteredData}
    />
  );
};

export default Search;



//Table before messing to get rid of the ul in the search

import React, { useEffect } from "react";
import { useState } from "react";
import generateData from "../FakeData";

import { getComparator } from "../utils/HelperFunctions";
import { useSort } from "../customHooks/useSort";
import {Search} from "../components/Search";

const Table = () => {
  const [data, setData] = useState([]);
  const { sortBy, sortOrder, handleSort } = useSort("title", "asc");

  useEffect(() => {
    console.log("In the useEffect of table");
    const savedData = localStorage.getItem("savedData");
    if (savedData) {
      console.log(savedData);
      const parsedData = JSON.parse(savedData);
      console.log(parsedData);
      setData(parsedData);
    } else {
      const newData = generateData(10);
      setData(newData);
      localStorage.setItem("savedData", JSON.stringify(newData));
    }
    console.log(data.discount);
  }, []);

  return (
    <>
      <div className="my-4">
        <Search data={data} />
      </div>
      <div className="mt-4">
        <h4 className="mb-4 capitalize">total orders: {data.length}</h4>
        <div className="overflow-x-auto rounded-lg border-2 border-slate-300">
          <table className="table table-zebra rounded-lg ">
            {/* HEAD */}
            <thead className="bg-slate-300 text-black text-lg text-center uppercase">
              <tr>
                <th>Select</th>
                <th>Image</th>
                <th
                  onClick={() => handleSort("title")}
                  className="cursor-pointer"
                >
                  Title
                </th>
                <th
                  onClick={() => handleSort("price")}
                  className="cursor-pointer"
                >
                  Price
                </th>
                <th>Description</th>
                <th>Category</th>

                <th
                  onClick={() => handleSort("discount")}
                  className="cursor-pointer"
                >
                  Discount
                </th>
                <th
                  onClick={() => handleSort("rating")}
                  className="cursor-pointer"
                >
                  Rating
                </th>
              </tr>
            </thead>
            {/* Body */}
            <tbody className="font-md">
              {/* Map over the products array and render each row */}
              {data
                .sort(getComparator(sortBy, sortOrder))
                .map((data, index) => (
                  <tr key={index}>
                    {/* Render each cell with the product data */}
                    <td>
                      <input
                        type="checkbox"
                        className="checkbox checkbox-md bg-slate-300 text-black"
                      />
                    </td>
                    <td>
                      <img src={data.image} alt={data.title} />
                    </td>
                    <td>{data.title}</td>
                    <td>{data.price}</td>
                    <td>{data.description}</td>
                    <td>{data.category}</td>
                    <td>{data.discount}</td>
                    <td>{data.rating}</td>
                  </tr>
                ))}
            </tbody>
          </table>
        </div>
      </div>
    </>
  );
};

export default Table;

